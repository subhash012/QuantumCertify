version: '3.8'

services:
  # Backend API service
  backend:
    image: ${REGISTRY_NAME}.azurecr.io/quantumcertify-backend:${IMAGE_TAG:-latest}
    container_name: quantumcertify-backend
    ports:
      - "8000:8000"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - DB_SERVER=${DB_SERVER}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT:-1433}
      - DB_DRIVER=${DB_DRIVER:-SQL+Server}
      - CONTACT_EMAIL=${CONTACT_EMAIL}
      - DEVELOPER_NAME=${DEVELOPER_NAME}
      - PROJECT_VERSION=${PROJECT_VERSION}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - quantumcertify-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Frontend React app
  frontend:
    image: ${REGISTRY_NAME}.azurecr.io/quantumcertify-frontend:${IMAGE_TAG:-latest}
    container_name: quantumcertify-frontend
    ports:
      - "80:80"
      - "443:443"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    networks:
      - quantumcertify-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

networks:
  quantumcertify-network:
    driver: bridge