version: '3.8'

services:
  # Backend API service
  backend:
    build: ./backend
    container_name: quantumcertify-backend
    ports:
      - "8000:8000"
    environment:
      - DB_SERVER=${DB_SERVER:-localhost}
      - DB_NAME=${DB_NAME:-QuantumCertifyDB}
      - DB_USERNAME=${DB_USERNAME:-sa}
      - DB_PASSWORD=${DB_PASSWORD}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:80
      - LOG_LEVEL=INFO
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - quantumcertify-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React app
  frontend:
    build: ./frontend
    container_name: quantumcertify-frontend
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    networks:
      - quantumcertify-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # SQL Server database (for development/testing)
  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: quantumcertify-db
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${DB_PASSWORD:-YourStrong@Passw0rd}
      - MSSQL_PID=Developer
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - quantumcertify-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${DB_PASSWORD:-YourStrong@Passw0rd} -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  quantumcertify-network:
    driver: bridge

volumes:
  sqlserver_data:
    driver: local